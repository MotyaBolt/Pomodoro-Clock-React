{"version":3,"sources":["components/Menu/Menu.jsx","assets/clock_sound.mp3","components/Timer/MainTimerBlock.jsx","components/Timer/Timer.jsx","components/TodoList/TodoList.jsx","assets/logo.png","components/Header/Header.jsx","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["Menu","props","_useState","useState","_useState2","_slicedToArray","selectedOption","setSelectedOption","selectOption","option","_jsxs","className","children","_jsx","value","onClick","e","target","choseMenuOption","MainTimerBlock","sessionLength","setSessionLength","_useState3","breakLength","_useState4","setBreakLength","_useState5","_useState6","timerIsStarted","setTimerStatus","_useState7","_useState8","globalTime","setGlobalTime","_useState9","_useState10","timerLabel","setTimerLabel","_useState11","menuOption","_useState12","setMenuOption","clockSound","document","getElementById","_useState13","_useState14","firstStart","setFirstStart","restartSession","restartBreak","restartLoop","useEffect","interval","setInterval","timerInterval","play","console","log","clearInterval","_ref","Math","floor","minutes","seconds","paused","pause","currentTime","id","src","soundFile","type","Timer","sessionInputVal","setSessionInputVal","breakInputVal","setBreakInputVal","saveTimeData","keyCode","undefined","parseFloat","placeholder","onChange","onKeyUp","onBlur","TodoList","todoValue","setTodoValue","todosData","setTodosData","saveTodo","includes","concat","_toConsumableArray","map","todo","index","filter","item","deleteTodo","Header","logoPath","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.a1494281.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../../styles/Menu.css';\n\nconst Menu = (props) => {\n  const [selectedOption, setSelectedOption] = useState('Session');\n  const selectOption = (option) => {\n    setSelectedOption(option);\n  };\n  return (\n    <div className=\"menu\">\n      <button\n        className={\n          selectedOption === 'Session' ? 'menu-btn-selected' : 'menu-btn'\n        }\n        value=\"Session\"\n        onClick={(e) => {\n          selectOption(e.target.value);\n          props.choseMenuOption('Session');\n        }}\n      >\n        Session\n      </button>\n      <button\n        className={\n          selectedOption === 'Break' ? 'menu-btn-selected' : 'menu-btn'\n        }\n        value=\"Break\"\n        onClick={(e) => {\n          selectOption(e.target.value);\n          props.choseMenuOption('Break');\n        }}\n      >\n        Break\n      </button>\n      <button\n        className={selectedOption === 'Loop' ? 'menu-btn-selected' : 'menu-btn'}\n        value=\"Loop\"\n        onClick={(e) => {\n          selectOption(e.target.value);\n          props.choseMenuOption('Loop');\n        }}\n      >\n        Loop\n      </button>\n    </div>\n  );\n};\n\nexport default Menu;\n","export default __webpack_public_path__ + \"static/media/clock_sound.cb8db447.mp3\";","import React, { useState, useEffect } from 'react';\nimport soundFile from '../../assets/clock_sound.mp3';\nimport '../../styles/MainTimerBlock.css';\n\nconst MainTimerBlock = (props) => {\n  const [sessionLength, setSessionLength] = useState(props.sessionLength);\n  const [breakLength, setBreakLength] = useState(props.breakLength);\n  const [timerIsStarted, setTimerStatus] = useState(false);\n  const [globalTime, setGlobalTime] = useState(props.sessionLength * 60);\n  const [timerLabel, setTimerLabel] = useState('Session');\n  const [menuOption, setMenuOption] = useState(props.menuOption);\n  const clockSound = document.getElementById('beep');\n  const [firstStart, setFirstStart] = useState(false);\n\n  const restartSession = () => {\n    setSessionLength(props.sessionLength);\n    setGlobalTime(props.sessionLength * 60);\n    setTimerStatus(false);\n    setFirstStart(false);\n  };\n\n  const restartBreak = () => {\n    setBreakLength(props.breakLength);\n    setGlobalTime(props.breakLength * 60);\n    setTimerStatus(false);\n    setFirstStart(false);\n  };\n\n  const restartLoop = () => {\n    setSessionLength(props.sessionLength);\n    setBreakLength(props.breakLength);\n    setGlobalTime(props.sessionLength * 60);\n    setTimerStatus(false);\n    setFirstStart(false);\n  };\n\n  const loopSwitch = () => {\n    if (timerLabel === 'Session') {\n      console.log('hre');\n      setGlobalTime(props.breakLength * 60);\n      setTimerLabel('Break');\n    } else {\n      setGlobalTime(props.sessionLength * 60);\n      setTimerLabel('Session');\n    }\n  };\n\n  useEffect(() => {\n    if (menuOption !== props.menuOption) {\n      setMenuOption(props.menuOption);\n      props.menuOption === 'Session' && props.menuOption !== 'Loop'\n        ? restartSession()\n        : restartBreak();\n      if (props.menuOption === 'Loop') {\n        restartLoop();\n      }\n    }\n\n    if (\n      props.sessionLength !== sessionLength &&\n      props.sessionLength > 0 &&\n      props.sessionLength <= 60\n    ) {\n      if (props.menuOption === 'Break') {\n        setSessionLength(props.sessionLength);\n      } else {\n        restartSession();\n      }\n    }\n    if (\n      props.breakLength !== breakLength &&\n      props.breakLength > 0 &&\n      props.breakLength <= 60\n    ) {\n      if (props.menuOption === 'Loop' || props.menuOption === 'Session') {\n        setBreakLength(props.breakLength);\n      } else {\n        restartBreak();\n      }\n    }\n\n    let interval = null;\n\n    if (timerIsStarted && globalTime > 0) {\n      interval = setInterval(timerInterval, 1000);\n    } else if (timerIsStarted && globalTime === 0) {\n      if (props.menuOption === 'Session') {\n        clockSound.play();\n        restartSession();\n      } else if (props.menuOption === 'Break') {\n        clockSound.play();\n        restartBreak();\n      } else {\n        clockSound.play();\n        interval = setInterval(timerInterval, 1000);\n        loopSwitch();\n      }\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [\n    sessionLength,\n    breakLength,\n    globalTime,\n    timerIsStarted,\n    timerLabel,\n    menuOption,\n    props.menuOption,\n    props.sessionLength,\n    props.breakLength,\n    firstStart,\n  ]);\n\n  let [minutes, seconds] = [Math.floor(globalTime / 60), globalTime % 60];\n\n  const startTimer = () => {\n    if (firstStart === false) {\n      timerInterval();\n      setFirstStart(true);\n    }\n    if (!timerIsStarted) setTimerStatus(true);\n  };\n\n  const timerInterval = () => {\n    setGlobalTime(globalTime - 1);\n  };\n\n  const pauseTimer = () => {\n    if (timerIsStarted) setTimerStatus(false);\n  };\n\n  const resetTimer = () => {\n    if (clockSound !== null && !clockSound.paused) {\n      clockSound.pause();\n      clockSound.currentTime = 0;\n    }\n    setTimerLabel('Session');\n    if (props.menuOption === 'Session') restartSession();\n    if (props.menuOption === 'Break') restartBreak();\n    if (props.menuOption === 'Loop') restartLoop();\n  };\n\n  return (\n    <div className=\"main-timer-block\">\n      <span className=\"time\">\n        {minutes < 10 ? '0' + minutes : minutes}:\n        {seconds < 10 ? '0' + seconds : seconds}\n      </span>\n      <div className=\"timer-btns\">\n        <i className=\"fas fa-play\" onClick={startTimer}></i>\n        <i className=\"fas fa-pause\" onClick={pauseTimer}></i>\n        <i className=\"fas fa-redo-alt\" onClick={resetTimer}></i>\n      </div>\n      <audio id=\"beep\" src={soundFile} type=\"audio\"></audio>\n    </div>\n  );\n};\n\nexport default MainTimerBlock;\n","import React, { useState } from 'react';\nimport MainTimerBlock from './MainTimerBlock.jsx';\nimport '../../styles/Timer.css';\n\nconst Timer = (props) => {\n  const [sessionLength, setSessionLength] = useState(25);\n  const [breakLength, setBreakLength] = useState(5);\n  const [sessionInputVal, setSessionInputVal] = useState('25');\n  const [breakInputVal, setBreakInputVal] = useState('5');\n\n  const sessionChangeHandler = (e) => {\n    setSessionInputVal(e.target.value);\n  };\n\n  const breakChangeHandler = (e) => {\n    setBreakInputVal(e.target.value);\n  };\n\n  const saveTimeData = (e) => {\n    if (e.keyCode === 13 || e.keyCode === undefined) {\n      if (sessionInputVal !== '' && breakInputVal !== '') {\n        setSessionLength(parseFloat(sessionInputVal));\n        setBreakLength(parseFloat(breakInputVal));\n      }\n    }\n  };\n\n  return (\n    <div className=\"timer\">\n      <div className=\"timer-settings-block-wrapper\">\n        <div className=\"timer-settings-block\">\n          <h3 className=\"timer-settings-name\">Session length:</h3>\n          <input\n            className=\"timer-option-length\"\n            placeholder=\"25\"\n            type=\"text\"\n            onChange={sessionChangeHandler}\n            value={sessionInputVal}\n            onKeyUp={saveTimeData}\n            onBlur={saveTimeData}\n          ></input>\n        </div>\n        <div className=\"timer-settings-block\">\n          <h3 className=\"timer-settings-name\">Break length:</h3>\n          <input\n            className=\"timer-option-length\"\n            placeholder=\"5\"\n            type=\"text\"\n            onChange={breakChangeHandler}\n            value={breakInputVal}\n            onKeyUp={saveTimeData}\n            onBlur={saveTimeData}\n          ></input>\n        </div>\n      </div>\n      <MainTimerBlock\n        sessionLength={sessionLength}\n        breakLength={breakLength}\n        menuOption={props.menuOption}\n      />\n    </div>\n  );\n};\n\nexport default Timer;\n","import React, { useState } from 'react';\nimport '../../styles/TodoList.css';\n\nconst TodoList = (props) => {\n  const [todoValue, setTodoValue] = useState('');\n  const [todosData, setTodosData] = useState([]);\n\n  const todoInputChange = (e) => {\n    setTodoValue(e.target.value);\n  };\n\n  const saveTodo = (e) => {\n    if (e.keyCode === 13 || e.keyCode === undefined) {\n      if (todoValue !== '' && !todosData.includes(todoValue)) {\n        setTodosData([todoValue, ...todosData]);\n        setTodoValue('');\n      }\n    }\n  };\n\n  const deleteTodo = (todo) => {\n    setTodosData(todosData.filter((item) => item !== todo));\n  };\n\n  return (\n    <div className=\"todo-list\">\n      <div className=\"todolist-header-block\">\n        <h1 className=\"todo-list-header\">To-Do List</h1>\n      </div>\n      <div className=\"create-todo-block\">\n        <input\n          className=\"todo-input\"\n          type=\"text\"\n          placeholder=\"Type something...\"\n          onChange={todoInputChange}\n          value={todoValue}\n          onKeyUp={saveTodo}\n        ></input>\n        <button className=\"add-todo-btn\" onClick={saveTodo}>\n          Add\n        </button>\n      </div>\n      <div className=\"todos\">\n        {todosData.map((todo, index) => {\n          return (\n            <div className=\"todo\" key={index}>\n              <p className=\"todo-name\">{todo}</p>\n              <button className=\"delete-todo\" onClick={() => deleteTodo(todo)}>\n                <i className=\"fas fa-trash-alt\"></i>\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;\n","export default __webpack_public_path__ + \"static/media/logo.fa36633c.png\";","import React from \"react\";\nimport \"../../styles/Header.css\";\nimport logoPath from \"../../assets/logo.png\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"logo-block\">\n        <img className=\"logo\" src={logoPath}></img>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport Menu from '../Menu/Menu.jsx';\nimport Timer from '../Timer/Timer.jsx';\nimport TodoList from '../TodoList/TodoList.jsx';\nimport Header from '../Header/Header.jsx';\nimport '../../styles/App.css';\n\nconst App = () => {\n  const [menuOption, setMenuOption] = useState('Session');\n\n  const choseMenuOption = (option) => {\n    setMenuOption(option);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"main-block\">\n        <Header />\n        <Menu choseMenuOption={choseMenuOption} />\n        <Timer menuOption={menuOption} />\n      </div>\n      <div className=\"todolist-wrapper\">\n        <TodoList />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}